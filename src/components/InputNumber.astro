---
interface Props {
	id?: string;
	attributes?: object;
	className?: string;
	inputClassName?: string;
	buttonClassName?: string;
	name?: string;
	placeHolder?: string;
	value?: string;
	spellCheck?: boolean;
	disabled?: boolean;
	required?: boolean;
	readOnly?: boolean;
}

const { id, attributes, className, inputClassName, buttonClassName, name, placeHolder, value, spellCheck = false, disabled, required, readOnly } = Astro.props;
---

<div x-init x-data="{value: 0}" class=`text-neutral-800 bg-white border border-neutral-200 focus-within:ring-1 focus-within:ring-neutral-300 focus-within:ring-offset-1 [&[error]]:ring-1 [&[error]]:ring-offset-1 [&[error]]:!ring-red-400 disabled:opacity-[0.6] disabled:cursor-not-allowed shadow-sm rounded-lg ${className}` {...attributes}>
	<button x-on:click="value--" class=`px-3 py-1.5 border-r border-neutral-200 hover:bg-neutral-100 ${buttonClassName}`> - </button>
	<input x-model="value" class={`px-3 py-1.5 w-24 transition-colors [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none text-center focus:outline-none ${inputClassName}`} id={id} name={name} placeholder={placeHolder} value={value} spellcheck={spellCheck} disabled={disabled} required={required} readonly={readOnly} type="number"/>
	<button x-on:click="value++" class=`px-3 py-1.5 border-l border-neutral-200 hover:bg-neutral-100 ${buttonClassName}`> + </button>
</div>
